# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import UserId_pb2 as UserId__pb2
import users_v2_pb2 as users__v2__pb2


class UserServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.InitializeUserAccount = channel.unary_unary(
        '/tv.uob.grpc.UserService/InitializeUserAccount',
        request_serializer=users__v2__pb2.UserInitialData.SerializeToString,
        response_deserializer=users__v2__pb2.User.FromString,
        )
    self.InitializeIfNotExist = channel.unary_unary(
        '/tv.uob.grpc.UserService/InitializeIfNotExist',
        request_serializer=users__v2__pb2.UserInitialData.SerializeToString,
        response_deserializer=users__v2__pb2.User.FromString,
        )
    self.GetUserByEmail = channel.unary_unary(
        '/tv.uob.grpc.UserService/GetUserByEmail',
        request_serializer=users__v2__pb2.Email.SerializeToString,
        response_deserializer=users__v2__pb2.User.FromString,
        )
    self.GetUserById = channel.unary_unary(
        '/tv.uob.grpc.UserService/GetUserById',
        request_serializer=UserId__pb2.UserId.SerializeToString,
        response_deserializer=users__v2__pb2.User.FromString,
        )
    self.UserExists = channel.unary_unary(
        '/tv.uob.grpc.UserService/UserExists',
        request_serializer=users__v2__pb2.Email.SerializeToString,
        response_deserializer=users__v2__pb2.Boolean.FromString,
        )


class UserServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def InitializeUserAccount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InitializeIfNotExist(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetUserByEmail(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetUserById(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UserExists(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'InitializeUserAccount': grpc.unary_unary_rpc_method_handler(
          servicer.InitializeUserAccount,
          request_deserializer=users__v2__pb2.UserInitialData.FromString,
          response_serializer=users__v2__pb2.User.SerializeToString,
      ),
      'InitializeIfNotExist': grpc.unary_unary_rpc_method_handler(
          servicer.InitializeIfNotExist,
          request_deserializer=users__v2__pb2.UserInitialData.FromString,
          response_serializer=users__v2__pb2.User.SerializeToString,
      ),
      'GetUserByEmail': grpc.unary_unary_rpc_method_handler(
          servicer.GetUserByEmail,
          request_deserializer=users__v2__pb2.Email.FromString,
          response_serializer=users__v2__pb2.User.SerializeToString,
      ),
      'GetUserById': grpc.unary_unary_rpc_method_handler(
          servicer.GetUserById,
          request_deserializer=UserId__pb2.UserId.FromString,
          response_serializer=users__v2__pb2.User.SerializeToString,
      ),
      'UserExists': grpc.unary_unary_rpc_method_handler(
          servicer.UserExists,
          request_deserializer=users__v2__pb2.Email.FromString,
          response_serializer=users__v2__pb2.Boolean.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'tv.uob.grpc.UserService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
