/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.PubSubJobMessage', null, global);
goog.exportSymbol('proto.VideoTranscodeJobArgs', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PubSubJobMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.PubSubJobMessage.oneofGroups_);
};
goog.inherits(proto.PubSubJobMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.PubSubJobMessage.displayName = 'proto.PubSubJobMessage';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.PubSubJobMessage.oneofGroups_ = [[3]];

/**
 * @enum {number}
 */
proto.PubSubJobMessage.JobargsCase = {
  JOBARGS_NOT_SET: 0,
  VIDEOTRANSCODEJOBARGS: 3
};

/**
 * @return {proto.PubSubJobMessage.JobargsCase}
 */
proto.PubSubJobMessage.prototype.getJobargsCase = function() {
  return /** @type {proto.PubSubJobMessage.JobargsCase} */(jspb.Message.computeOneofCase(this, proto.PubSubJobMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PubSubJobMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.PubSubJobMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PubSubJobMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PubSubJobMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    jobid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    jobtype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    videotranscodejobargs: (f = msg.getVideotranscodejobargs()) && proto.VideoTranscodeJobArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PubSubJobMessage}
 */
proto.PubSubJobMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PubSubJobMessage;
  return proto.PubSubJobMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PubSubJobMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PubSubJobMessage}
 */
proto.PubSubJobMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJobtype(value);
      break;
    case 3:
      var value = new proto.VideoTranscodeJobArgs;
      reader.readMessage(value,proto.VideoTranscodeJobArgs.deserializeBinaryFromReader);
      msg.setVideotranscodejobargs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PubSubJobMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PubSubJobMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PubSubJobMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.PubSubJobMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJobid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJobtype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVideotranscodejobargs();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.VideoTranscodeJobArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional string jobId = 1;
 * @return {string}
 */
proto.PubSubJobMessage.prototype.getJobid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.PubSubJobMessage.prototype.setJobid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string jobType = 2;
 * @return {string}
 */
proto.PubSubJobMessage.prototype.getJobtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.PubSubJobMessage.prototype.setJobtype = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional VideoTranscodeJobArgs videoTranscodeJobArgs = 3;
 * @return {?proto.VideoTranscodeJobArgs}
 */
proto.PubSubJobMessage.prototype.getVideotranscodejobargs = function() {
  return /** @type{?proto.VideoTranscodeJobArgs} */ (
    jspb.Message.getWrapperField(this, proto.VideoTranscodeJobArgs, 3));
};


/** @param {?proto.VideoTranscodeJobArgs|undefined} value */
proto.PubSubJobMessage.prototype.setVideotranscodejobargs = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.PubSubJobMessage.oneofGroups_[0], value);
};


proto.PubSubJobMessage.prototype.clearVideotranscodejobargs = function() {
  this.setVideotranscodejobargs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.PubSubJobMessage.prototype.hasVideotranscodejobargs = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.VideoTranscodeJobArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.VideoTranscodeJobArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.VideoTranscodeJobArgs.displayName = 'proto.VideoTranscodeJobArgs';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.VideoTranscodeJobArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.VideoTranscodeJobArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.VideoTranscodeJobArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VideoTranscodeJobArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gsrawvideo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    format: jspb.Message.getFieldWithDefault(msg, 3, ""),
    convertedvideobucket: jspb.Message.getFieldWithDefault(msg, 4, ""),
    convertedvidepath: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.VideoTranscodeJobArgs}
 */
proto.VideoTranscodeJobArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.VideoTranscodeJobArgs;
  return proto.VideoTranscodeJobArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.VideoTranscodeJobArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.VideoTranscodeJobArgs}
 */
proto.VideoTranscodeJobArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGsrawvideo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormat(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConvertedvideobucket(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConvertedvidepath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.VideoTranscodeJobArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.VideoTranscodeJobArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.VideoTranscodeJobArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.VideoTranscodeJobArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBucketname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGsrawvideo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFormat();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConvertedvideobucket();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConvertedvidepath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string bucketName = 1;
 * @return {string}
 */
proto.VideoTranscodeJobArgs.prototype.getBucketname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.VideoTranscodeJobArgs.prototype.setBucketname = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string gsRawVideo = 2;
 * @return {string}
 */
proto.VideoTranscodeJobArgs.prototype.getGsrawvideo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.VideoTranscodeJobArgs.prototype.setGsrawvideo = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string format = 3;
 * @return {string}
 */
proto.VideoTranscodeJobArgs.prototype.getFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.VideoTranscodeJobArgs.prototype.setFormat = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string convertedVideoBucket = 4;
 * @return {string}
 */
proto.VideoTranscodeJobArgs.prototype.getConvertedvideobucket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.VideoTranscodeJobArgs.prototype.setConvertedvideobucket = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string convertedVidePath = 5;
 * @return {string}
 */
proto.VideoTranscodeJobArgs.prototype.getConvertedvidepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.VideoTranscodeJobArgs.prototype.setConvertedvidepath = function(value) {
  jspb.Message.setField(this, 5, value);
};


goog.object.extend(exports, proto);
